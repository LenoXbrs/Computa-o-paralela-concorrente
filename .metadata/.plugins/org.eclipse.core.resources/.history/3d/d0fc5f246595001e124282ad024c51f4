package av3;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

public class Ecommerce{

    public static void main(String[] args) {
        // Dados da compra
        Map<String, Double> items = new HashMap<>();
        items.put("Item1", 10.50);
        items.put("Item2", 20.75);

        // URL do servidor de compra
        String purchaseUrl = "https://belmondojr.dev/compra.php?";

        try {
            // Construir a URL com os parâmetros da compra
            StringBuilder urlWithParams = new StringBuilder(purchaseUrl);
            for (Map.Entry<String, Double> entry : items.entrySet()) {
                String itemName = URLEncoder.encode(entry.getKey(), StandardCharsets.UTF_8);
                double amount = entry.getValue();
                urlWithParams.append("&products[]=").append(itemName);
                urlWithParams.append("&values[]=").append(amount);
            }

            // Criar URL e abrir a conexão
            URL url = new URL(urlWithParams.toString());
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            // Configurar método de requisição e cabeçalhos
            connection.setRequestMethod("GET");

            // Obter a resposta do servidor
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))) {
                String line;
                StringBuilder response = new StringBuilder();
                while ((line = reader.readLine()) != null) {
                    response.append(line);
                }
                System.out.println("Resposta do servidor: " + response.toString());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
